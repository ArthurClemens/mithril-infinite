{"version":3,"sources":["styler.es6"],"names":["_j2c","require","remove","id","old","document","getElementById","parentNode","removeChild","add","_len","arguments","length","styles","Array","_key","styleEl","createElement","setAttribute","forEach","styleList","Object","keys","style","scoped","@global","sheet","_j2c2","appendChild","createTextNode","head"],"mappings":"uJAAA,IAAAA,MAAAC,QAAA,0CAEMC,OAAS,SAACC,IACZ,GAAIA,GAAI,CACJ,GAAMC,KAAMC,SAASC,eAAeH,GAChCC,MACAA,IAAIG,WAAWC,YAAYJ,OASjCK,IAAM,SAACN,IAAkB,IAAA,GAAAO,MAAAC,UAAAC,OAAXC,OAAWC,MAAAJ,KAAA,EAAAA,KAAA,EAAA,GAAAK,KAAA,EAAAL,KAAAK,KAAAA,OAAXF,OAAWE,KAAA,GAAAJ,UAAAI,KAC3Bb,QAAOC,GACP,IAAMa,SAAUX,SAASY,cAAc,QACnCd,KACAa,QAAQE,aAAa,KAAMf,IAE/BU,OAAOM,QAAQ,SAACC,WAERC,OAAOC,KAAKF,WAAWR,QACvBQ,UAAUD,QAAQ,SAACI,OACf,GAAMC,SAAUC,UAAWF,OACrBG,MAAQC,MAAAA,WAAID,MAAMF,OACxBR,SAAQY,YAAYvB,SAASwB,eAAeH,YAIxDrB,SAASyB,KAAKF,YAAYZ,8BAI1BP,IAAAA,IACAP,OAAAA;;;;;;AApCJ;;;;;;AAEA,IAAM,SAAS,SAAT,MAAS,CAAC,EAAD,EAAQ;AACnB,QAAI,EAAJ,EAAQ;AACJ,YAAM,MAAM,SAAS,cAAT,CAAwB,EAAxB,CAAZ;AACA,YAAI,GAAJ,EAAS;AACL,gBAAI,UAAJ,CAAe,WAAf,CAA2B,GAA3B;AACH;AACJ;AACJ,CAPD;;;;;;AAaA,IAAM,MAAM,SAAN,GAAM,CAAC,EAAD,EAAmB;AAAA,sCAAX,MAAW;AAAX,cAAW;AAAA;;AAC3B,WAAO,EAAP;AACA,QAAM,UAAU,SAAS,aAAT,CAAuB,OAAvB,CAAhB;AACA,QAAI,EAAJ,EAAQ;AACJ,gBAAQ,YAAR,CAAqB,IAArB,EAA2B,EAA3B;AACH;AACD,WAAO,OAAP,CAAe,UAAC,SAAD,EAAe;;AAE1B,YAAI,OAAO,IAAP,CAAY,SAAZ,EAAuB,MAA3B,EAAmC;AAC/B,sBAAU,OAAV,CAAkB,UAAC,KAAD,EAAW;AACzB,oBAAM,SAAS,EAAC,WAAW,KAAZ,EAAf;AACA,oBAAM,QAAQ,cAAI,KAAJ,CAAU,MAAV,CAAd;AACA,wBAAQ,WAAR,CAAoB,SAAS,cAAT,CAAwB,KAAxB,CAApB;AACH,aAJD;AAKH;AACJ,KATD;AAUA,aAAS,IAAT,CAAc,WAAd,CAA0B,OAA1B;AACH,CAjBD;;kBAmBe;AACX,YADW;AAEX;AAFW,C","file":"styler.js","sourcesContent":["import j2c from 'j2c';\n\nconst remove = (id) => {\n    if (id) {\n        const old = document.getElementById(id);\n        if (old) {\n            old.parentNode.removeChild(old);\n        }\n    }\n};\n\n/*\n* id: identifier, used as HTMLElement id for the attached <style></style> element\n* styles: list of lists style Objects\n*/\nconst add = (id, ...styles) => {\n    remove(id);\n    const styleEl = document.createElement('style');\n    if (id) {\n        styleEl.setAttribute('id', id);\n    }\n    styles.forEach((styleList) => {\n        // each style returns a list\n        if (Object.keys(styleList).length) {\n            styleList.forEach((style) => {\n                const scoped = {'@global': style};\n                const sheet = j2c.sheet(scoped);\n                styleEl.appendChild(document.createTextNode(sheet));\n            });\n        }\n    });\n    document.head.appendChild(styleEl);\n};\n\nexport default {\n    add,\n    remove\n};\n"]}