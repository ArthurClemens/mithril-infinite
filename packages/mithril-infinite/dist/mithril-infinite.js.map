{"version":3,"file":"mithril-infinite.js","sources":["../src/classes.js","../src/util.js","../node_modules/mithril/stream/stream.js","../node_modules/mithril/stream.js","../src/page.js","../src/placeholder.js","../src/styler.js","../src/css.js","../src/index.js"],"sourcesContent":["\nexport const classes = {\n  scrollView:    \"mithril-infinite__scroll-view\",\n  scrollViewX:   \"mithril-infinite__scroll-view--x\",\n  scrollViewY:   \"mithril-infinite__scroll-view--y\",\n  scrollContent: \"mithril-infinite__scroll-content\",\n  content:       \"mithril-infinite__content\",\n  pages:         \"mithril-infinite__pages\",\n  page:          \"mithril-infinite__page\",\n  pageEven:      \"mithril-infinite__page--even\",\n  pageOdd:       \"mithril-infinite__page--odd\",\n  placeholder:   \"mithril-infinite__page--placeholder\",\n  before:        \"mithril-infinite__before\",\n  after:         \"mithril-infinite__after\"\n};\n","import verge from \"verge\";\nimport { classes } from \"./classes\";\n\nconst LEEWAY = 300;\n\nexport const getElementSize = (el, axis) => {\n  const styles = window.getComputedStyle(el);\n  if (axis === \"x\") {\n    const margin = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n    return el.scrollWidth + margin;\n  } else {\n    const margin = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n    return el.scrollHeight + margin;\n  }\n};\n\n// el, axis = \"y\", expand = LEEWAY\nexport const isElementInViewport = ({el, axis = \"y\", leeway = LEEWAY}) => {\n  return axis === \"y\"\n    ? verge.inY(el, leeway) || verge.inY(el, -leeway)\n    : axis === \"x\"\n      ? verge.inX(el, leeway) || verge.inX(el, -leeway)\n      : verge.inViewport(el, leeway) || verge.inViewport(el, -leeway);\n};\n\nexport const makeClassName = pageNum => [\n  classes.page,\n  pageNum % 2 === 0 ? classes.pageEven : classes.pageOdd\n].join(\" \");","\"use strict\"\n\n;(function() {\n\nvar guid = 0, HALT = {}\nfunction createStream() {\n\tfunction stream() {\n\t\tif (arguments.length > 0 && arguments[0] !== HALT) updateStream(stream, arguments[0])\n\t\treturn stream._state.value\n\t}\n\tinitStream(stream)\n\n\tif (arguments.length > 0 && arguments[0] !== HALT) updateStream(stream, arguments[0])\n\n\treturn stream\n}\nfunction initStream(stream) {\n\tstream.constructor = createStream\n\tstream._state = {id: guid++, value: undefined, state: 0, derive: undefined, recover: undefined, deps: {}, parents: [], endStream: undefined, unregister: undefined}\n\tstream.map = stream[\"fantasy-land/map\"] = map, stream[\"fantasy-land/ap\"] = ap, stream[\"fantasy-land/of\"] = createStream\n\tstream.valueOf = valueOf, stream.toJSON = toJSON, stream.toString = valueOf\n\n\tObject.defineProperties(stream, {\n\t\tend: {get: function() {\n\t\t\tif (!stream._state.endStream) {\n\t\t\t\tvar endStream = createStream()\n\t\t\t\tendStream.map(function(value) {\n\t\t\t\t\tif (value === true) {\n\t\t\t\t\t\tunregisterStream(stream)\n\t\t\t\t\t\tendStream._state.unregister = function(){unregisterStream(endStream)}\n\t\t\t\t\t}\n\t\t\t\t\treturn value\n\t\t\t\t})\n\t\t\t\tstream._state.endStream = endStream\n\t\t\t}\n\t\t\treturn stream._state.endStream\n\t\t}}\n\t})\n}\nfunction updateStream(stream, value) {\n\tupdateState(stream, value)\n\tfor (var id in stream._state.deps) updateDependency(stream._state.deps[id], false)\n\tif (stream._state.unregister != null) stream._state.unregister()\n\tfinalize(stream)\n}\nfunction updateState(stream, value) {\n\tstream._state.value = value\n\tstream._state.changed = true\n\tif (stream._state.state !== 2) stream._state.state = 1\n}\nfunction updateDependency(stream, mustSync) {\n\tvar state = stream._state, parents = state.parents\n\tif (parents.length > 0 && parents.every(active) && (mustSync || parents.some(changed))) {\n\t\tvar value = stream._state.derive()\n\t\tif (value === HALT) return false\n\t\tupdateState(stream, value)\n\t}\n}\nfunction finalize(stream) {\n\tstream._state.changed = false\n\tfor (var id in stream._state.deps) stream._state.deps[id]._state.changed = false\n}\n\nfunction combine(fn, streams) {\n\tif (!streams.every(valid)) throw new Error(\"Ensure that each item passed to stream.combine/stream.merge is a stream\")\n\treturn initDependency(createStream(), streams, function() {\n\t\treturn fn.apply(this, streams.concat([streams.filter(changed)]))\n\t})\n}\n\nfunction initDependency(dep, streams, derive) {\n\tvar state = dep._state\n\tstate.derive = derive\n\tstate.parents = streams.filter(notEnded)\n\n\tregisterDependency(dep, state.parents)\n\tupdateDependency(dep, true)\n\n\treturn dep\n}\nfunction registerDependency(stream, parents) {\n\tfor (var i = 0; i < parents.length; i++) {\n\t\tparents[i]._state.deps[stream._state.id] = stream\n\t\tregisterDependency(stream, parents[i]._state.parents)\n\t}\n}\nfunction unregisterStream(stream) {\n\tfor (var i = 0; i < stream._state.parents.length; i++) {\n\t\tvar parent = stream._state.parents[i]\n\t\tdelete parent._state.deps[stream._state.id]\n\t}\n\tfor (var id in stream._state.deps) {\n\t\tvar dependent = stream._state.deps[id]\n\t\tvar index = dependent._state.parents.indexOf(stream)\n\t\tif (index > -1) dependent._state.parents.splice(index, 1)\n\t}\n\tstream._state.state = 2 //ended\n\tstream._state.deps = {}\n}\n\nfunction map(fn) {return combine(function(stream) {return fn(stream())}, [this])}\nfunction ap(stream) {return combine(function(s1, s2) {return s1()(s2())}, [stream, this])}\nfunction valueOf() {return this._state.value}\nfunction toJSON() {return this._state.value != null && typeof this._state.value.toJSON === \"function\" ? this._state.value.toJSON() : this._state.value}\n\nfunction valid(stream) {return stream._state }\nfunction active(stream) {return stream._state.state === 1}\nfunction changed(stream) {return stream._state.changed}\nfunction notEnded(stream) {return stream._state.state !== 2}\n\nfunction merge(streams) {\n\treturn combine(function() {\n\t\treturn streams.map(function(s) {return s()})\n\t}, streams)\n}\n\nfunction scan(reducer, seed, stream) {\n\tvar newStream = combine(function (s) {\n\t\treturn seed = reducer(seed, s._state.value)\n\t}, [stream])\n\n\tif (newStream._state.state === 0) newStream(seed)\n\n\treturn newStream\n}\n\nfunction scanMerge(tuples, seed) {\n\tvar streams = tuples.map(function(tuple) {\n\t\tvar stream = tuple[0]\n\t\tif (stream._state.state === 0) stream(undefined)\n\t\treturn stream\n\t})\n\n\tvar newStream = combine(function() {\n\t\tvar changed = arguments[arguments.length - 1]\n\n\t\tstreams.forEach(function(stream, idx) {\n\t\t\tif (changed.indexOf(stream) > -1) {\n\t\t\t\tseed = tuples[idx][1](seed, stream._state.value)\n\t\t\t}\n\t\t})\n\n\t\treturn seed\n\t}, streams)\n\n\treturn newStream\n}\n\ncreateStream[\"fantasy-land/of\"] = createStream\ncreateStream.merge = merge\ncreateStream.combine = combine\ncreateStream.scan = scan\ncreateStream.scanMerge = scanMerge\ncreateStream.HALT = HALT\n\nif (typeof module !== \"undefined\") module[\"exports\"] = createStream\nelse if (typeof window.m === \"function\" && !(\"stream\" in window.m)) window.m.stream = createStream\nelse window.m = {stream : createStream}\n\n}());\n","\"use strict\"\n\nmodule.exports = require(\"./stream/stream\")\n","import m from \"mithril\";\nimport prop from \"mithril/stream\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport { getElementSize, makeClassName } from \"./util\";\n\nconst getPageData = url =>\n  m.request({\n    method: \"GET\",\n    url\n  });\n\nconst oninit = ({ state, attrs }) => {\n  const pageNum = attrs.pageNum;\n  let content = prop([]);\n  if (attrs.pageData) {\n    const result = attrs.pageData(pageNum);\n    Promise.resolve(result).then(content);\n    // if (result.then) {\n    //   // A Promise\n    //   result.then(content);\n    // } else {\n    //   content = result;\n    // }\n  } else if (attrs.pageUrl) {\n    const url = attrs.pageUrl(pageNum);\n    getPageData(url).then(content);\n  }\n\n  const processPageData = attrs.processPageData || ((content, attrs1) =>\n    content && content.length\n      ? content.map((data, index) => attrs.item(data, attrs1, index))\n      : null\n  );\n\n  state.content = content;\n  // Memoize some properties that do not change\n  state.className = makeClassName(pageNum);\n  state.pageTag = attrs.pageTag || \"div\";\n  state.processPageData = processPageData;\n};\n\nconst view = ({state, attrs}) => {\n  const pageId = attrs.pageId;\n  const storedPageSize = attrs.pageSizes[pageId] || 0;\n  let pageSize = 0;\n\n  // attrs/pageSize overrides all measurements on elements here\n  if (attrs.pageSize) {\n    pageSize = attrs.pageSize(state.content());\n    attrs.updatePageSize(pageId, pageSize);\n  }\n\n  const cssSize = pageSize\n    ? pageSize + \"px\"\n    : !attrs.autoSize || (attrs.isScrolling && storedPageSize)\n      ? storedPageSize + \"px\"\n      : \"auto\";\n\n  const update = dom => {\n    if (pageSize) return;\n    const size = getElementSize(dom, attrs.axis);\n    if (size) {\n      attrs.updatePageSize(pageId, size);\n    }\n  };\n\n  return m(state.pageTag, {\n    \"data-page\": pageId,\n    class: state.className,\n    style: storedPageSize\n      ? attrs.axis === \"x\"\n        ? { width: cssSize }\n        : { height: cssSize }\n      : null,\n    oncreate: ({ dom }) => {\n      const ro = new ResizeObserver(entries => {\n        for (const entry of entries) {\n          const { width, height } = entry.contentRect;\n          if (\n            (attrs.axis === \"x\" && width !== storedPageSize)\n            || (attrs.axis === \"y\" && height !== storedPageSize)\n          ) {\n            update(dom);\n          }\n        }\n      });\n      ro.observe(dom);\n      // update(dom);\n    },\n    onupdate: ({ dom }) => update(dom)\n  }, state.processPageData(state.content(), {\n    isScrolling: attrs.isScrolling,\n    pageId: attrs.pageId,\n    pageNum: attrs.pageNum\n  }));\n};\n\nexport const page = {\n  oninit,\n  view\n};\n","import m from \"mithril\";\nimport { makeClassName } from \"./util\";\nimport { classes } from \"./classes\";\n\nexport const placeholder = {\n  oninit: vnode =>\n    // Memoize some properties that do not change\n    vnode.state.className = makeClassName(vnode.attrs.pageNum),\n  view: ({state, attrs}) => {\n    const pageId = attrs.pageId;\n    const storedPageSize = attrs.pageSizes[pageId] || 0;\n    return m(\"div\", {\n      \"data-page\": pageId,\n      class: [\n        classes.placeholder,\n        state.className\n      ].join(\" \"),\n      style: Object.assign(\n        {},\n        attrs.axis === \"x\"\n          ? { width:  storedPageSize + \"px\" }\n          : { height: storedPageSize + \"px\" }\n      )\n    });\n  }\n};\n","import J2c from \"j2c\";\nconst j2c = new J2c();\n\n/*\n * @param id: identifier, used as HTMLElement id for the attached <style></style> element\n * @param styles: list of lists style Objects\n */\nexport const addStyle = (id, ...styles) => {\n  removeStyle(id);\n  const styleEl = document.createElement(\"style\");\n  if (id) {\n    styleEl.setAttribute(\"id\", id);\n  }\n  styles.forEach((styleList) => {\n    // each style returns a list\n    if (Object.keys(styleList).length) {\n      styleList.forEach((style) => {\n        const scoped = { \"@global\": style };\n        const sheet = j2c.sheet(scoped);\n        styleEl.appendChild(document.createTextNode(sheet));\n      });\n    }\n  });\n  document.head.appendChild(styleEl);\n};\n\nconst removeStyle = id => {\n  if (id) {\n    const old = document.getElementById(id);\n    if (old) {\n      old.parentNode.removeChild(old);\n    }\n  }\n};","import { addStyle } from \"./styler\";\nimport { classes } from \"./classes\";\n\nconst styles = [{\n  [\".\" + classes.scrollView]: {\n    \"-webkit-overflow-scrolling\": \"touch\",\n    height: \"100%\",\n\n    [\"&.\" + classes.scrollViewY]: {\n      overflowX: \"hidden\",\n      overflowY: \"auto\",\n      height: \"100%\",\n\n      [\" .\" + classes.scrollContent]: {\n        height: \"100%\"\n      }\n    },\n\n    [\"&.\" + classes.scrollViewX]: {\n      overflowX: \"auto\",\n      overflowY: \"hidden\",\n      width: \"100%\",\n\n      [\" .\" + classes.scrollContent]: {\n        width: \"100%\"\n      }\n    }\n  }\n  // by default unstyled:\n  // mithril-infinite__content\n  // mithril-infinite__pages\n  // mithril-infinite__page\n}];\n\naddStyle(\"mithril-infinite\", styles);\n","import m from \"mithril\";\nimport { classes } from \"./classes\";\nimport { getElementSize, isElementInViewport } from \"./util\";\nimport { page } from \"./page\";\nimport { placeholder } from \"./placeholder\";\nimport \"./css\";\n\nconst SCROLLING_UPDATE_DELAY = 200;\nconst WATCH_IS_SCROLLING_DELAY = 60;\nconst SEL_PADDING = \"000000\";\n\nconst numToId = pageNum =>\n  SEL_PADDING.substring(0, SEL_PADDING.length - (\"\" + pageNum).length) + pageNum;\n\nconst calculateCurrentPageNum = (scrollAmount, state) => {\n  const pageNumKeys = state.sortedKeys;\n  if (pageNumKeys.length === 0) {\n    return 1;\n  }\n  let acc = state.beforeSize || 0;\n  let currentPageNum = 1;\n  for (let i = 0; i < pageNumKeys.length; i = i + 1) {\n    let pageKey = pageNumKeys[i];\n    if (scrollAmount > acc) {\n      currentPageNum = parseInt(pageKey, 10);\n    }\n    acc += state.pageSizes[pageKey];\n  }\n  return currentPageNum;\n};\n\nconst calculateContentSize = (from, to, state) => {\n  const fromIndex = Math.max(0, from - 1);\n  if (to < fromIndex) {\n    return 0;\n  }\n  const toIndex = to;\n  const pageNumKeys = state.sortedKeys.slice(fromIndex, toIndex);\n  let size = state.beforeSize || 0;\n  size = pageNumKeys.reduce((total, pageKey) => (\n    total += state.pageSizes[pageKey] || 0\n  ), size);\n  size += state.afterSize || 0;\n  return size;\n};\n\nconst isPageInViewport = (page, axis, state, scrollView) => {\n  if (!scrollView) {\n    return false;\n  }\n  const id = numToId(page);\n  const el = scrollView.querySelector(`[data-page=\"${id}\"]`);\n  return isElementInViewport({ el, axis });\n};\n\nconst updatePageSize = state => (pageId, size) => (\n  state.pageSizes[pageId] = parseInt(size, 10),\n  state.sortedKeys = Object.keys(state.pageSizes).sort(),\n  calculatePreloadSlots(state)\n);\n\nconst updatePart = (dom, whichSize, state, axis) => {\n  const size = getElementSize(dom, axis);\n  if (size) {\n    state[whichSize] = size;\n  }\n};\n\nconst calculatePreloadSlots = state => {\n  if (!state.scrollView) return;\n  const boundingClientRect = state.scrollView.getBoundingClientRect();\n  state.boundingClientRect = state.boundingClientRect || boundingClientRect;\n  if (boundingClientRect.width !== state.boundingClientRect.width\n    || boundingClientRect.height !== state.boundingClientRect.height\n  ) {\n    state.preloadSlots = state.attrsPreloadSlots || 1;\n  }\n  state.boundingClientRect = boundingClientRect;\n\n  // calculate if we have room on the screen to show more slots\n  if (state.contentSize\n    && (state.preloadSlots < state.pageCount)\n    && (state.preloadSlots <= state.attrsMaxPreloadSlots)\n    && (state.contentSize < boundingClientRect.height)\n  ) {\n    state.preloadSlots++;\n    setTimeout(m.redraw, 0);\n  }\n};\n\nconst getPageList = (currentPageNum, fromPage, toPage, currentPage, preloadSlots, maxPages) => {\n  const minPageNum = fromPage\n    ? parseInt(fromPage, 10)\n    : currentPage\n      ? currentPage\n      : 1;\n  const maxPageNum = toPage\n    ? parseInt(toPage, 10)\n    : currentPage\n      ? currentPage\n      : maxPages;\n  const pages = [];\n  const prePages = [];\n  for (let i = -preloadSlots; i <= preloadSlots; i = i + 1) {\n    const pageNum = currentPageNum + i;\n    if (pageNum >= minPageNum && pageNum <= maxPageNum) {\n      pages.push(pageNum);\n    }\n  }\n  for (let pageNum = 1; pageNum < pages[0]; pageNum = pageNum + 1) {\n    prePages.push(pageNum);\n  }\n  return {pages, prePages, maxPageNum};\n};\n\nconst oninit = vnode => {\n  const attrs = vnode.attrs;\n  // Memoize some properties that do not change\n  const axis = attrs.axis || \"y\";\n  const whichScroll = axis === \"x\" ? \"scrollLeft\" : \"scrollTop\";\n  const autoSize = (attrs.autoSize !== undefined && attrs.autoSize === false) ? false : true;\n  const pageSize = attrs.pageSize;\n  const scrollThrottle = attrs.throttle !== undefined ? attrs.throttle * 1000 : SCROLLING_UPDATE_DELAY;\n  const contentTag = attrs.contentTag || \"div\";\n  const classList = [\n    classes.scrollView,\n    axis === \"x\"\n      ? classes.scrollViewX\n      : classes.scrollViewY,\n    attrs.class\n  ].join(\" \");\n\n  const scroll = () => {\n    const state = vnode.state;\n    state.isScrolling = true;\n    // throttle updates while scrolling\n    if (!state.scrollWatchUpdateStateId) {\n      state.scrollWatchUpdateStateId = setTimeout(() => {\n        // update pages\n        m.redraw();\n        state.scrollWatchUpdateStateId = null;\n        state.isScrolling = false;\n        setTimeout(() => {\n          if (state.isScrolling === false) {\n            m.redraw();\n          }\n        }, WATCH_IS_SCROLLING_DELAY);\n      }, state.scrollThrottle);\n    }\n  };\n\n  vnode.state = {\n    afterSize: null,\n    beforeSize: null,\n    boundingClientRect: {},\n    currentPageNum: 0,\n    isScrolling: false,\n    pageSizes: {},\n    preloadSlots: attrs.preloadPages || 1,\n    scrollView: null,\n    scrollWatchUpdateStateId: null,\n    sortedKeys: [],\n\n    // Memoized\n    attrsMaxPreloadSlots: attrs.maxPreloadPages || Number.MAX_VALUE,\n    attrsPreloadSlots: attrs.preloadPages || 1,\n    autoSize,\n    axis,\n    classList,\n    contentTag,\n    pageSize,\n    scroll,\n    scrollThrottle,\n    whichScroll,\n  };\n};\n\nconst view = ({ state, attrs }) => {\n  const scrollAmount = state.scrollView ? state.scrollView[state.whichScroll] : 0;\n  const axis = state.axis;\n  const maxPages = attrs.maxPages !== undefined ? attrs.maxPages : Number.MAX_VALUE;\n  \n  const currentPageNum = attrs.currentPage\n    ? parseInt(attrs.currentPage, 10)\n    : calculateCurrentPageNum(scrollAmount, state);\n\n  if (attrs.pageChange && currentPageNum !== state.currentPageNum) {\n    attrs.pageChange(currentPageNum);\n  }\n  state.currentPageNum = currentPageNum;\n\n  if (state.scrollView && attrs.getDimensions) {\n    attrs.getDimensions({\n      scrolled: scrollAmount,\n      size: state.contentSize\n    });\n  }\n\n  const { pages, prePages, maxPageNum } = getPageList(currentPageNum, attrs.from, attrs.to, attrs.currentPage, state.preloadSlots, maxPages);\n  state.contentSize = calculateContentSize(1, maxPageNum, state);\n  state.pageCount = pages.length;\n\n  const isLastPageVisible = maxPageNum\n    ? isPageInViewport(maxPageNum, axis, state, state.scrollView)\n    : true;\n\n  return m(\"div\",\n    {\n      oncreate: ({ dom }) => {\n        state.scrollView = attrs.scrollView\n          ? document.querySelector(attrs.scrollView)\n          : dom;\n        state.scrollView.className += \" \" + state.classList;\n\n        if (attrs.setDimensions) {\n          const dimensions = attrs.setDimensions();\n          if (dimensions.size > 0) {\n            const whichSize = axis === \"x\"\n              ? \"width\"\n              : \"height\";\n            dom.style[whichSize] = dimensions.size + \"px\";\n          }\n          state.scrollView[state.whichScroll] = dimensions.scrolled;\n        }\n        state.scrollView.addEventListener(\"scroll\", state.scroll);\n      },\n      onremove: () => state.scrollView.removeEventListener(\"scroll\", state.scroll)\n    },\n    m(\"div\",\n      {\n        class: classes.scrollContent,\n        style: !state.autoSize\n          ? null\n          : Object.assign(\n            {},\n            axis === \"x\"\n              ? { width: state.contentSize + \"px\" }\n              : { height: state.contentSize + \"px\" },\n            attrs.contentSize\n              ? axis === \"x\"\n                ? { \"min-width\": attrs.contentSize + \"px\" }\n                : { \"min-height\": attrs.contentSize + \"px\" }\n              : {}\n        )\n      },\n      [\n        m(state.contentTag, { class: classes.content }, [\n          attrs.before\n            ? m(\"div\", {\n              class: classes.before,\n              oncreate: ({ dom }) => updatePart(dom, \"before\", state, axis),\n              onupdate: ({ dom }) => updatePart(dom, \"before\", state, axis)\n            }, attrs.before)\n            : null,\n          m(\"div\", { class: classes.pages }, [\n            prePages.map(pageNum => \n              m(placeholder, {\n                axis,\n                key: numToId(pageNum),\n                pageId: numToId(pageNum),\n                pageNum,\n                pageSizes: state.pageSizes\n              })\n            ),\n            pages.map(pageNum =>\n              m(page, {\n                autoSize: state.autoSize,\n                axis,\n                isScrolling: state.isScrolling,\n                item: attrs.item,\n                key: numToId(pageNum),\n                pageData: attrs.pageData,\n                pageId: numToId(pageNum),\n                pageNum,\n                pageSize: state.pageSize,\n                pageSizes: state.pageSizes,\n                pageTag: attrs.pageTag,\n                pageUrl: attrs.pageUrl,\n                updatePageSize: updatePageSize(state)\n              })\n            )\n          ]),\n          // only show \"after\" when content is available\n          attrs.after && state.contentSize\n            ? m(\"div\", {\n              class: classes.after,\n              style: {\n                // visually hide this element until the last page is into view\n                // to prevent flashes of after content when scrolling fast\n                visibility: isLastPageVisible ? \"visible\" : \"hidden\"\n              },\n              oncreate: ({ dom }) => updatePart(dom, \"after\", state, axis),\n              onupdate: ({ dom }) => updatePart(dom, \"after\", state, axis),\n            }, attrs.after)\n            : null\n        ])\n      ]\n    )\n  );\n};\n\nexport const infinite = {\n  oninit,\n  view,\n  isElementInViewport\n};\n\n"],"names":["classes","getElementSize","el","axis","styles","window","getComputedStyle","margin","parseFloat","marginLeft","marginRight","scrollWidth","marginTop","marginBottom","scrollHeight","isElementInViewport","leeway","verge","inY","inX","inViewport","makeClassName","page","pageNum","pageEven","pageOdd","join","createStream","stream","arguments","length","HALT","updateStream","_state","value","initStream","constructor","id","guid","undefined","state","derive","recover","deps","parents","endStream","unregister","map","ap","valueOf","toJSON","toString","defineProperties","get","updateState","changed","updateDependency","mustSync","every","active","some","finalize","combine","fn","streams","valid","Error","initDependency","apply","this","concat","filter","dep","notEnded","registerDependency","i","unregisterStream","dependent","index","indexOf","splice","s1","s2","merge","s","scan","reducer","seed","newStream","scanMerge","tuples","tuple","forEach","idx","require$$0","getPageData","m","request","oninit","attrs","content","prop","pageData","result","resolve","then","pageUrl","url","processPageData","attrs1","data","item","className","pageTag","view","pageId","storedPageSize","pageSizes","pageSize","updatePageSize","cssSize","autoSize","isScrolling","update","size","dom","width","height","ResizeObserver","entries","entry","contentRect","observe","placeholder","vnode","babelHelpers.extends","j2c","J2c","removeStyle","old","document","getElementById","parentNode","removeChild","scrollView","scrollViewY","scrollContent","scrollViewX","styleEl","createElement","setAttribute","styleList","Object","keys","style","scoped","@global","sheet","appendChild","createTextNode","head","SEL_PADDING","numToId","substring","calculateCurrentPageNum","scrollAmount","pageNumKeys","sortedKeys","acc","beforeSize","currentPageNum","pageKey","parseInt","calculateContentSize","from","to","fromIndex","Math","max","toIndex","slice","reduce","total","afterSize","isPageInViewport","querySelector","sort","calculatePreloadSlots","updatePart","whichSize","boundingClientRect","getBoundingClientRect","preloadSlots","attrsPreloadSlots","contentSize","pageCount","attrsMaxPreloadSlots","redraw","getPageList","fromPage","toPage","currentPage","maxPages","minPageNum","maxPageNum","pages","prePages","push","whichScroll","scrollThrottle","throttle","contentTag","classList","class","scroll","scrollWatchUpdateStateId","setTimeout","preloadPages","maxPreloadPages","Number","MAX_VALUE","pageChange","getDimensions","isLastPageVisible","setDimensions","dimensions","scrolled","addEventListener","removeEventListener","min-width","min-height","before","after"],"mappings":"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"}